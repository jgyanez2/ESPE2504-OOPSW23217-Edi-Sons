
package ec.edu.espe.view;

import ec.edu.espe.model.RegistroMensaje;
import ec.edu.espe.model.Mensaje;
import ec.edu.espe.model.MensajeDAO;
import java.awt.Component;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextArea;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Andy
 */
public class registroMensaje extends javax.swing.JFrame {

    private boolean modoEdicion = false; // Variable para verificar si estamos en modo edición de trámite
    private int idTramiteEditando; // Para almacenar el ID del trámite en edición
    private java.time.LocalDateTime fechaEnvioEditando;

    /**
     * Creates new form registroTramite
     */
    public registroMensaje() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        tasunto = new javax.swing.JTextField();
        ttipoMensaje = new javax.swing.JComboBox<>();
        tdestinatario = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        tcuerpo = new javax.swing.JTextArea();
        btnRegistrarMensaje = new javax.swing.JButton();
        btnCancelarTramite = new javax.swing.JButton();
        btnSalirTramite = new javax.swing.JButton();
        tremitente = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        tobservacion = new javax.swing.JTextArea();
        jButton5 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocationByPlatform(true);
        setUndecorated(true);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "DATOS DEL MENSAJE", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("MingLiU_HKSCS-ExtB", 1, 36))); // NOI18N
        jPanel2.setOpaque(false);

        jLabel1.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 1, 34)); // NOI18N
        jLabel1.setText("Remitente");

        jLabel5.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 1, 34)); // NOI18N
        jLabel5.setText("Tipo de mensaje");

        jLabel6.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 1, 34)); // NOI18N
        jLabel6.setText("Asunto");

        jLabel7.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 1, 34)); // NOI18N
        jLabel7.setText("Cuerpo del mensaje");

        jLabel9.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 1, 34)); // NOI18N
        jLabel9.setText("Destinatarios");

        jLabel11.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 1, 34)); // NOI18N
        jLabel11.setText("Fecha Envio");

        jLabel12.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 1, 34)); // NOI18N
        jLabel12.setText("Observaciones");

        ttipoMensaje.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 0, 14)); // NOI18N
        ttipoMensaje.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione una opción", "Mensaje Informativo", "Mensaje de Advertencia", "Mensaje de Error", "Mensaje de Confirmación", "Mensaje de Éxito", "Mensaje de Solicitud", "Mensaje Urgente", "Mensaje Personalizado" }));

        tcuerpo.setColumns(20);
        tcuerpo.setRows(5);
        jScrollPane3.setViewportView(tcuerpo);

        btnRegistrarMensaje.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 0, 18)); // NOI18N
        btnRegistrarMensaje.setText("ENVIAR MENSAJE");
        btnRegistrarMensaje.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRegistrarMensaje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarMensajeActionPerformed(evt);
            }
        });

        btnCancelarTramite.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 0, 18)); // NOI18N
        btnCancelarTramite.setText("CANCELAR");
        btnCancelarTramite.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCancelarTramite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarTramiteActionPerformed(evt);
            }
        });

        btnSalirTramite.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 0, 18)); // NOI18N
        btnSalirTramite.setText("SALIR");
        btnSalirTramite.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSalirTramite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirTramiteActionPerformed(evt);
            }
        });

        tobservacion.setColumns(20);
        tobservacion.setRows(5);
        jScrollPane4.setViewportView(tobservacion);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(117, 117, 117)
                        .addComponent(jLabel6))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tasunto, javax.swing.GroupLayout.DEFAULT_SIZE, 347, Short.MAX_VALUE)
                            .addComponent(tdestinatario)
                            .addComponent(tremitente)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addComponent(jLabel9))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addComponent(jLabel11))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(btnRegistrarMensaje, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45)
                        .addComponent(btnCancelarTramite)
                        .addGap(18, 18, 18)
                        .addComponent(btnSalirTramite))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel12)
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ttipoMensaje, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 442, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(31, 31, 31))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel5)
                            .addGap(4, 4, 4)
                            .addComponent(ttipoMensaje, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(29, 29, 29)
                            .addComponent(jLabel7)
                            .addGap(2, 2, 2)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel12)
                            .addGap(151, 151, 151))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                            .addGap(371, 371, 371)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tremitente, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)
                        .addComponent(tdestinatario, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tasunto, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel11)
                        .addGap(106, 106, 106)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnRegistrarMensaje)
                            .addComponent(btnCancelarTramite)
                            .addComponent(btnSalirTramite))))
                .addContainerGap(76, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 970, 650));

        jButton5.setFont(new java.awt.Font("Dubai Medium", 1, 34)); // NOI18N
        jButton5.setText("X");
        jButton5.setAlignmentY(0.0F);
        jButton5.setBorderPainted(false);
        jButton5.setContentAreaFilled(false);
        jButton5.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 0, 58, 70));

        jButton3.setFont(new java.awt.Font("Dubai Medium", 0, 80)); // NOI18N
        jButton3.setText("-");
        jButton3.setBorderPainted(false);
        jButton3.setContentAreaFilled(false);
        jButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 10, 67, 45));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/fondo1000X720.png"))); // NOI18N
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void setFields(Mensaje mensaje) {
        System.out.println("Asignando datos al formulario:");
        System.out.println("Remitente: " + mensaje.getRemitente());
        System.out.println("Destinatario: " + mensaje.getDestinatario());
        System.out.println("Asunto: " + mensaje.getAsunto());
        System.out.println("Cuerpo: " + mensaje.getCuerpo());
        System.out.println("Tipo de Mensaje: " + mensaje.getTipoMensaje());
        System.out.println("Observación: " + mensaje.getObservacion());
        System.out.println("Fecha de Envío: " + mensaje.getFechaEnvio());

        // Asignar valores a los campos del formulario
        tremitente.setText(mensaje.getRemitente());
        tdestinatario.setText(mensaje.getDestinatario());
        tasunto.setText(mensaje.getAsunto());
        tcuerpo.setText(""); // Limpiar antes de asignar
        tcuerpo.setText(mensaje.getCuerpo()); // Ahora usando el getter
        ttipoMensaje.setSelectedItem(mensaje.getTipoMensaje());
        tobservacion.setText(""); // Limpiar antes de asignar
        tobservacion.setText(mensaje.getObservacion()); // Ahora usando el getter

        // Asignar la fecha de envío usando un formato adecuado
        try {
            SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
            jdfFechaEnvio.setDate(formato.parse(mensaje.getFechaEnvio().toString())); // Usar el getter para la fecha
        } catch (ParseException e) {
            e.printStackTrace();
        }

        // Activar modo edición, si es necesario
        modoEdicion = true;
        btnRegistrarMensaje.setText("ACTUALIZAR");
    }


    private void btnRegistrarMensajeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarMensajeActionPerformed
// Instanciamos MensajeDAO para interactuar con la base de datos
        MensajeDAO mensajeDAO = new MensajeDAO();

        try {
            // Obtener los valores de los campos del formulario
            String remitente = tremitente.getText().trim();
            String destinatario = tdestinatario.getText().trim();
            String asunto = tasunto.getText().trim();
            String cuerpo = tcuerpo.getText().trim();
            String tipoMensaje = (String) ttipoMensaje.getSelectedItem();  // Tipo de mensaje desde JComboBox
            String observacion = tobservacion.getText().trim();

            // Validar el formulario antes de continuar
            if (!RegistroMensaje.validarFormulario(remitente, destinatario, asunto, cuerpo, tipoMensaje, observacion)) {
                return;  // Si hay un error en la validación, detenemos la ejecución
            }

            // Validación de ComboBox (tipo de mensaje)
            if (tipoMensaje == null || tipoMensaje.trim().equals("Seleccione una opción")) {
                JOptionPane.showMessageDialog(null, "Por favor seleccione un tipo de mensaje.");
                return;  // Detener la ejecución si no se selecciona un tipo de mensaje
            }

            // Validación de otros campos
            if (remitente.isEmpty() || destinatario.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Remitente y destinatario son obligatorios.");
                return;  // Detener la ejecución si algún campo obligatorio está vacío
            }

            // Si estamos en modo edición, actualizamos el mensaje
            if (modoEdicion) {
                // Actualizar el mensaje existente
                boolean actualizado = mensajeDAO.modificarMensaje(new Mensaje(remitente, destinatario, asunto, cuerpo,
                        tipoMensaje, observacion, java.time.LocalDateTime.now())); // Se asume que la fecha de envío puede ser editada

                if (actualizado) {
                    JOptionPane.showMessageDialog(null, "Mensaje modificado correctamente.");
                    limpiarCampos();  // Limpiar los campos después de la edición
                } else {
                    JOptionPane.showMessageDialog(null, "Error al modificar el mensaje.");
                }
            } else {
                // Método para guardar un nuevo mensaje
                boolean registrado = mensajeDAO.guardarMensaje(new Mensaje(remitente, destinatario, asunto, cuerpo,
                        tipoMensaje, observacion, java.time.LocalDateTime.now()));  // Asignar la fecha de envío actual

                if (registrado) {
                    JOptionPane.showMessageDialog(null, "Mensaje registrado correctamente.");
                    limpiarCampos();  // Limpiar los campos después de registrar
                } else {
                    JOptionPane.showMessageDialog(null, "Error al registrar el mensaje.");
                }
            }
        } catch (Exception e) {
            // Capturar cualquier error y mostrarlo en un cuadro de diálogo
            JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
        }
    }//GEN-LAST:event_btnRegistrarMensajeActionPerformed

    private void btnCancelarTramiteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarTramiteActionPerformed
        // TODO add your handling code here:
        limpiarCampos();
    }//GEN-LAST:event_btnCancelarTramiteActionPerformed

    private void btnSalirTramiteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirTramiteActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnSalirTramiteActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_jButton3ActionPerformed
    private void limpiarCampos() {
        // Limpiar los campos de texto para los datos del trámite
        tasunto.setText("");  // Limpiar campo de costo estimad
        jdfFechaEnvio.setDate(null);     // Limpiar fecha de fin
        ttipoMensaje.setSelectedIndex(0);  // Restablecer selección de estado
        tcuerpo.setText("");  // Limpiar JTextArea de observaciones
        tdestinatario.setText("");      // Limpiar campo de tiempo real
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(registroMensaje.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(registroMensaje.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(registroMensaje.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(registroMensaje.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new registroMensaje().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelarTramite;
    private javax.swing.JButton btnRegistrarMensaje;
    private javax.swing.JButton btnSalirTramite;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField tasunto;
    private javax.swing.JTextArea tcuerpo;
    private javax.swing.JTextField tdestinatario;
    private javax.swing.JTextArea tobservacion;
    private javax.swing.JTextField tremitente;
    private javax.swing.JComboBox<String> ttipoMensaje;
    // End of variables declaration//GEN-END:variables
}
