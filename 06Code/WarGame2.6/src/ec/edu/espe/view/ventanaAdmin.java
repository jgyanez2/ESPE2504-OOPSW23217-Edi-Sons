/*
                        Univesidad de las Fuerzas Armadas ESPE
                                Ingeniería de Software
Nombres: Joseph Gallardo, Jonathan Guayta, Andrés Hinojosa      Periodo: 202451
Asignatura: Programación Orientada a Objetos                    NRC: 1967
Fecha: 10/02/2025
Tema: Proyecto Juridico "AxisLaw"
Construcción de un sistema para el control y administración de trámites judiciales
 */
package ec.edu.espe.view;

import ec.edu.espe.model.Mensaje;
import ec.edu.espe.model.MensajeDAO;
import ec.edu.espe.model.RegistroMensaje;
import ec.edu.espe.model.Usuario;
import ec.edu.espe.model.UsuarioDAO;
import ec.edu.espe.controller.ControladorTablaMensajes;
import ec.edu.espe.controller.ControladorTablaUsuarios;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Andy
 */
public class ventanaAdmin extends javax.swing.JFrame {

    int id;

    /**
     * Creates new form ventanaAdmin
     */
    public ventanaAdmin() {
        initComponents();
        this.setLocationRelativeTo(null); // Centrar la ventana en la pantalla
        this.setResizable(false);
        ControladorTablaUsuarios controlador = new ControladorTablaUsuarios(tablaUsuarios);  // tablaUsuarios es tu JTable
        controlador.cargarDatos();  // Recargar los datos en la tabla
        ControladorTablaMensajes controladort = new ControladorTablaMensajes(tablaMensajes);  // tablaUsuarios es tu JTable
        controladort.cargarDatos();  // Recargar los datos en la tabla
        tablaUsuarios.setDefaultEditor(Object.class, null);
        tablaMensajes.setDefaultEditor(Object.class, null);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton5 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        panelInicio = new javax.swing.JPanel();
        jButton7 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        panelTramites = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaMensajes = new javax.swing.JTable();
        jButtonBuscar2 = new javax.swing.JButton();
        jTextFieldBuscar2 = new javax.swing.JTextField();
        jButton14 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        jButton17 = new javax.swing.JButton();
        panelUsuarios = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaUsuarios = new javax.swing.JTable();
        btnBuscarUsuario = new javax.swing.JButton();
        jTextBuscarUsuario = new javax.swing.JTextField();
        btnActualizarTaUsuario = new javax.swing.JButton();
        btnModificarUsuario = new javax.swing.JButton();
        btnRegistrarUsuario = new javax.swing.JButton();
        btnEliminarUsuario = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        btInicio = new javax.swing.JButton();
        btnTramites = new javax.swing.JButton();
        btnUsuarios = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocationByPlatform(true);
        setUndecorated(true);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton5.setFont(new java.awt.Font("Dubai Medium", 1, 34)); // NOI18N
        jButton5.setText("X");
        jButton5.setAlignmentY(0.0F);
        jButton5.setBorderPainted(false);
        jButton5.setContentAreaFilled(false);
        jButton5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(1210, 0, 58, 70));

        jButton3.setFont(new java.awt.Font("Dubai Medium", 0, 80)); // NOI18N
        jButton3.setText("-");
        jButton3.setBorderPainted(false);
        jButton3.setContentAreaFilled(false);
        jButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1130, 10, 67, 45));

        jPanel1.setOpaque(false);
        jPanel1.setLayout(new java.awt.CardLayout());

        panelInicio.setBackground(new java.awt.Color(204, 204, 0));
        panelInicio.setOpaque(false);
        panelInicio.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton7.setBackground(new java.awt.Color(16, 32, 45));
        jButton7.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 1, 14)); // NOI18N
        jButton7.setForeground(new java.awt.Color(255, 255, 255));
        jButton7.setText("CERRAR SESIÓN");
        jButton7.setBorderPainted(false);
        jButton7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        panelInicio.add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 690, -1, -1));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/inciojef.png"))); // NOI18N
        panelInicio.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jPanel1.add(panelInicio, "card2");

        panelTramites.setBackground(new java.awt.Color(255, 102, 0));
        panelTramites.setOpaque(false);

        jLabel9.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 0, 80)); // NOI18N
        jLabel9.setText("MENSAJES");

        jPanel4.setOpaque(false);

        tablaMensajes.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 1, 14)); // NOI18N
        tablaMensajes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID TRAMITE", "ID CLIENTE", "TIPO DE TRAMITE", "DESCRIPCION ", "DOCUMENTACION REQUERIDA", "STATUS", "COSTO ESTIMADO", "TIEMPO ESTIMADO", "COSTO REAL", "TIEMPO REAL", "FECHA INICIO", "FECHA FIN", "OBSERVACIONES"
            }
        ));
        tablaMensajes.setOpaque(false);
        tablaMensajes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaMensajesMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tablaMensajes);

        jButtonBuscar2.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 1, 30)); // NOI18N
        jButtonBuscar2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/search (1).png"))); // NOI18N
        jButtonBuscar2.setText("BUSCAR");
        jButtonBuscar2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButtonBuscar2.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButtonBuscar2.setIconTextGap(15);
        jButtonBuscar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscar2ActionPerformed(evt);
            }
        });

        jTextFieldBuscar2.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jTextFieldBuscar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldBuscar2ActionPerformed(evt);
            }
        });

        jButton14.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 1, 30)); // NOI18N
        jButton14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/sandclock.png"))); // NOI18N
        jButton14.setText("ACTUALIZAR TABLA");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        jButton15.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 1, 30)); // NOI18N
        jButton15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/settings (1).png"))); // NOI18N
        jButton15.setText("MODIFICAR");
        jButton15.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton15.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButton15.setIconTextGap(15);
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        jButton16.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 1, 30)); // NOI18N
        jButton16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/user.png"))); // NOI18N
        jButton16.setText("REGISTRAR");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        jButton17.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 1, 30)); // NOI18N
        jButton17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/trash (1).png"))); // NOI18N
        jButton17.setText("ELIMINAR");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jButtonBuscar2, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextFieldBuscar2, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jButton14)
                        .addGap(48, 48, 48)
                        .addComponent(jButton17, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton16, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton15, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(25, 25, 25))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton16, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton14)
                        .addComponent(jButton17)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonBuscar2)
                    .addComponent(jTextFieldBuscar2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton15))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8))
        );

        javax.swing.GroupLayout panelTramitesLayout = new javax.swing.GroupLayout(panelTramites);
        panelTramites.setLayout(panelTramitesLayout);
        panelTramitesLayout.setHorizontalGroup(
            panelTramitesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTramitesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelTramitesLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addGap(333, 333, 333))
        );
        panelTramitesLayout.setVerticalGroup(
            panelTramitesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelTramitesLayout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel1.add(panelTramites, "card3");

        panelUsuarios.setOpaque(false);

        jPanel2.setOpaque(false);

        tablaUsuarios.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 1, 14)); // NOI18N
        tablaUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "NOMBRE", "USUARIO", "CONTRASEÑA", "ROL", "IDENTIFICACIÓN", "NACIMIENTO", "GENERO", "DIRECCIÓN", "TELÉFONO", "EMAIL"
            }
        ));
        tablaUsuarios.setOpaque(false);
        tablaUsuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaUsuariosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaUsuarios);

        btnBuscarUsuario.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 1, 30)); // NOI18N
        btnBuscarUsuario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/search (1).png"))); // NOI18N
        btnBuscarUsuario.setText("BUSCAR");
        btnBuscarUsuario.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnBuscarUsuario.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnBuscarUsuario.setIconTextGap(15);
        btnBuscarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarUsuarioActionPerformed(evt);
            }
        });

        jTextBuscarUsuario.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jTextBuscarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextBuscarUsuarioActionPerformed(evt);
            }
        });

        btnActualizarTaUsuario.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 1, 30)); // NOI18N
        btnActualizarTaUsuario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/sandclock.png"))); // NOI18N
        btnActualizarTaUsuario.setText("ACTUALIZAR TABLA");
        btnActualizarTaUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarTaUsuarioActionPerformed(evt);
            }
        });

        btnModificarUsuario.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 1, 30)); // NOI18N
        btnModificarUsuario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/settings (1).png"))); // NOI18N
        btnModificarUsuario.setText("MODIFICAR");
        btnModificarUsuario.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnModificarUsuario.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnModificarUsuario.setIconTextGap(15);
        btnModificarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarUsuarioActionPerformed(evt);
            }
        });

        btnRegistrarUsuario.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 1, 30)); // NOI18N
        btnRegistrarUsuario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/user.png"))); // NOI18N
        btnRegistrarUsuario.setText("Registrar");
        btnRegistrarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarUsuarioActionPerformed(evt);
            }
        });

        btnEliminarUsuario.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 1, 30)); // NOI18N
        btnEliminarUsuario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/trash (1).png"))); // NOI18N
        btnEliminarUsuario.setText("ELIMINAR");
        btnEliminarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarUsuarioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(27, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnBuscarUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextBuscarUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnActualizarTaUsuario)
                        .addGap(48, 48, 48)
                        .addComponent(btnEliminarUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnRegistrarUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnModificarUsuario, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(25, 25, 25))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnRegistrarUsuario, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnActualizarTaUsuario)
                        .addComponent(btnEliminarUsuario)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBuscarUsuario)
                    .addComponent(jTextBuscarUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnModificarUsuario))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8))
        );

        jLabel4.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 0, 80)); // NOI18N
        jLabel4.setText("USUARIOS");

        javax.swing.GroupLayout panelUsuariosLayout = new javax.swing.GroupLayout(panelUsuarios);
        panelUsuarios.setLayout(panelUsuariosLayout);
        panelUsuariosLayout.setHorizontalGroup(
            panelUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(panelUsuariosLayout.createSequentialGroup()
                .addGap(321, 321, 321)
                .addComponent(jLabel4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelUsuariosLayout.setVerticalGroup(
            panelUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelUsuariosLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel1.add(panelUsuarios, "card6");

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 0, 1000, 720));

        btInicio.setBackground(new java.awt.Color(37, 55, 69));
        btInicio.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 1, 36)); // NOI18N
        btInicio.setText("INICIO");
        btInicio.setBorderPainted(false);
        btInicio.setContentAreaFilled(false);
        btInicio.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btInicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btInicioActionPerformed(evt);
            }
        });
        getContentPane().add(btInicio, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 250, 210, 63));

        btnTramites.setBackground(new java.awt.Color(37, 55, 69));
        btnTramites.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 1, 36)); // NOI18N
        btnTramites.setText("MENSAJES");
        btnTramites.setBorderPainted(false);
        btnTramites.setContentAreaFilled(false);
        btnTramites.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnTramites.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTramitesActionPerformed(evt);
            }
        });
        getContentPane().add(btnTramites, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 340, 210, 63));

        btnUsuarios.setBackground(new java.awt.Color(37, 55, 69));
        btnUsuarios.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 1, 36)); // NOI18N
        btnUsuarios.setText("USUARIOS");
        btnUsuarios.setBorderPainted(false);
        btnUsuarios.setContentAreaFilled(false);
        btnUsuarios.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnUsuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnUsuariosMouseClicked(evt);
            }
        });
        getContentPane().add(btnUsuarios, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 440, 210, 63));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Group 299.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
    }//GEN-LAST:event_formComponentResized

    private void btInicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btInicioActionPerformed
        // TODO add your handling code here:
        panelInicio.setVisible(true);
        panelTramites.setVisible(false);
        panelUsuarios.setVisible(false);

    }//GEN-LAST:event_btInicioActionPerformed

    private void btnTramitesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTramitesActionPerformed
        // TODO add your handling code here:
        panelInicio.setVisible(false);
        panelTramites.setVisible(true);
        panelUsuarios.setVisible(false);
    }//GEN-LAST:event_btnTramitesActionPerformed

    private void btnUsuariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUsuariosMouseClicked
        // TODO add your handling code here:
        panelInicio.setVisible(false);
        panelTramites.setVisible(false);
        panelUsuarios.setVisible(true);
    }//GEN-LAST:event_btnUsuariosMouseClicked

    private void btnRegistrarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarUsuarioActionPerformed
        // TODO add your handling code here:
        ventanaAdmin vA = new ventanaAdmin();
        vA.setVisible(false);
        // Abrir la ventana de Registro de Usuarios
        registroUsuario ventanaRegistro = new registroUsuario();
        ventanaRegistro.setVisible(true);

    }//GEN-LAST:event_btnRegistrarUsuarioActionPerformed


    private void btnActualizarTaUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarTaUsuarioActionPerformed
        // Actualizar los datos de la tabla
        ControladorTablaUsuarios controlador = new ControladorTablaUsuarios(tablaUsuarios);  // tablaUsuarios es tu JTable
        controlador.cargarDatos();  // Recargar los datos en la tabla
        this.jTextBuscarUsuario.setText("");
    }//GEN-LAST:event_btnActualizarTaUsuarioActionPerformed

    private void tablaUsuariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaUsuariosMouseClicked
        // TODO add your handling code here:
        int fila = tablaUsuarios.getSelectedRow();
        if (fila == -1) {
            JOptionPane.showMessageDialog(null, "Selecciona un usuario para modificar.");
        } else {
            // Obtener los valores de la fila seleccionada
            id = Integer.parseInt(tablaUsuarios.getValueAt(fila, 0).toString());
            String usuario = (String) tablaUsuarios.getValueAt(fila, 1);
            String password = (String) tablaUsuarios.getValueAt(fila, 2);
            String tipoUsuario = (String) tablaUsuarios.getValueAt(fila, 3);
            String nombreCompleto = (String) tablaUsuarios.getValueAt(fila, 4);
            String ciPasport = (String) tablaUsuarios.getValueAt(fila, 5);
            String fNacimiento = (String) tablaUsuarios.getValueAt(fila, 6);
            String genero = (String) tablaUsuarios.getValueAt(fila, 7);
            String direccion = (String) tablaUsuarios.getValueAt(fila, 8);
            String telefono = (String) tablaUsuarios.getValueAt(fila, 9);
            String email = (String) tablaUsuarios.getValueAt(fila, 10);

        }
    }//GEN-LAST:event_tablaUsuariosMouseClicked

    private void btnModificarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarUsuarioActionPerformed
        // Obtener la fila seleccionada en la tabla
        int fila = tablaUsuarios.getSelectedRow();

        // Verificar si se ha seleccionado una fila
        if (fila != -1) {
            // Obtener los datos de la fila seleccionada
            int id = Integer.parseInt(tablaUsuarios.getValueAt(fila, 0).toString());
            String usuario = tablaUsuarios.getValueAt(fila, 1).toString();
            String password = tablaUsuarios.getValueAt(fila, 2).toString();
            String tipoUsuario = tablaUsuarios.getValueAt(fila, 3).toString();
            String nombreCompleto = tablaUsuarios.getValueAt(fila, 4).toString();
            String ciPasport = tablaUsuarios.getValueAt(fila, 5).toString();
            String fNacimiento = tablaUsuarios.getValueAt(fila, 6).toString();
            String genero = tablaUsuarios.getValueAt(fila, 7).toString();
            String direccion = tablaUsuarios.getValueAt(fila, 8).toString();
            String telefono = tablaUsuarios.getValueAt(fila, 9).toString();
            String email = tablaUsuarios.getValueAt(fila, 10).toString();

            // Crear una nueva instancia del formulario de edición, pasándole los datos obtenidos
            registroUsuario formularioEdicion = new registroUsuario();
            formularioEdicion.setFields(id, usuario, password, tipoUsuario, nombreCompleto, ciPasport, fNacimiento, genero, direccion, telefono, email);

            // Hacer visible el formulario de edición
            formularioEdicion.setVisible(true);
        } else {
            // Mostrar mensaje si no se seleccionó ninguna fila
            JOptionPane.showMessageDialog(null, "Selecciona un usuario para modificar.");
        }
    }//GEN-LAST:event_btnModificarUsuarioActionPerformed

    private void btnEliminarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarUsuarioActionPerformed
        // Primero obtenemos el ID del usuario seleccionado en la tabla o en el listado
        int idUsuarioSeleccionado = obtenerIdUsuarioSeleccionado(); // Implementa este método para obtener el ID de la selección

        if (idUsuarioSeleccionado == -1) {  // Si no hay usuario seleccionado
            JOptionPane.showMessageDialog(null, "Por favor selecciona un usuario para eliminar.");
            return;
        }

        // Confirmamos si el usuario está seguro de eliminar
        int confirmacion = JOptionPane.showConfirmDialog(null, "¿Estás seguro de eliminar este usuario?", "Confirmar eliminación", JOptionPane.YES_NO_OPTION);

        if (confirmacion == JOptionPane.YES_OPTION) {
            // Si la respuesta es sí, procedemos a eliminar
            UsuarioDAO uDAO = new UsuarioDAO();
            boolean eliminado = uDAO.eliminarUsuario(idUsuarioSeleccionado); // Llamamos al método para eliminar el usuario

            if (eliminado) {
                JOptionPane.showMessageDialog(null, "Usuario eliminado correctamente.");
                // Aquí puedes actualizar el listado de usuarios o realizar cualquier otra acción
                actualizarListaUsuarios(); // Método para actualizar el listado de usuarios
            } else {
                JOptionPane.showMessageDialog(null, "Error al eliminar el usuario.");
            }
        }
    }//GEN-LAST:event_btnEliminarUsuarioActionPerformed

    private void btnBuscarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarUsuarioActionPerformed
        String ciPasport = jTextBuscarUsuario.getText().trim();

        if (ciPasport.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Por favor ingrese un CI para buscar.");
            return;
        }

        UsuarioDAO uDAO = new UsuarioDAO();
        List<Usuario> usuarios = uDAO.buscarPorCiPasport(ciPasport); // Cambiado a lista

        DefaultTableModel model = (DefaultTableModel) tablaUsuarios.getModel();
        model.setRowCount(0);  // Limpiamos la tabla

        if (!usuarios.isEmpty()) {
            // Iteramos sobre la lista de usuarios encontrados y los agregamos a la tabla
            for (Usuario usuario : usuarios) {
                model.addRow(new Object[]{
                    usuario.getId(),
                    usuario.getUsuario(),
                    usuario.getPassword(),
                    usuario.getTipoUsuario(),
                    usuario.getNombreCompleto(),
                    usuario.getCiPasport(),
                    usuario.getfNacimiento(),
                    usuario.getGenero(),
                    usuario.getDireccion(),
                    usuario.getTelefono(),
                    usuario.getEmail()
                });
            }
        } else {
            JOptionPane.showMessageDialog(null, "No se encontró ningún usuario con ese CI.");
        }
    }//GEN-LAST:event_btnBuscarUsuarioActionPerformed

    private void jTextBuscarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextBuscarUsuarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextBuscarUsuarioActionPerformed

    private void tablaMensajesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaMensajesMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tablaMensajesMouseClicked

    private void jButtonBuscar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscar2ActionPerformed

        // Obtener el ID del mensaje para buscarlo
        String idMensajeStr = jTextFieldBuscar2.getText().trim();

        if (idMensajeStr.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Por favor ingrese un ID de mensaje para buscar.");
            return;
        }

        // Convertir el ID a entero
        int idMensaje;
        try {
            idMensaje = Integer.parseInt(idMensajeStr);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "El ID de mensaje debe ser un número válido.");
            return;
        }

        MensajeDAO mDAO = new MensajeDAO();
        Mensaje mensaje = mDAO.buscarPorIdMensaje(idMensaje);  // Buscar mensaje por ID

        DefaultTableModel model = (DefaultTableModel) tablaMensajes.getModel();
        model.setRowCount(0);  // Limpiamos la tabla antes de mostrar los resultados

        if (mensaje != null) {
            // Agregamos el mensaje encontrado a la tabla
            model.addRow(new Object[]{
                mensaje.getIdMensaje(),
                mensaje.getRemitente(),
                mensaje.getDestinatario(),
                mensaje.getAsunto(),
                mensaje.getTipoMensaje(),
                mensaje.getFechaEnvio(),
                mensaje.getObservacion()
            });
        } else {
            JOptionPane.showMessageDialog(null, "No se encontró ningún mensaje con ese ID.");
        }
    }//GEN-LAST:event_jButtonBuscar2ActionPerformed

    private void jTextFieldBuscar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldBuscar2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldBuscar2ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        // TODO add your handling code here:
        // Actualizar los datos de la tabla de trámites
        ControladorTablaMensajes controlador = new ControladorTablaMensajes(tablaMensajes);  // tablaTramites es tu JTable
        controlador.cargarDatos();  // Recargar los datos en la tabla
        this.jTextFieldBuscar2.setText("");
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        // Obtener la fila seleccionada en la tabla
        int fila = tablaMensajes.getSelectedRow();

        // Verificar si se ha seleccionado una fila
        if (fila != -1) {
            // Obtener los datos de la fila seleccionada
            int idMensaje = Integer.parseInt(tablaMensajes.getValueAt(fila, 0).toString());
            String remitente = tablaMensajes.getValueAt(fila, 1).toString();
            String destinatario = tablaMensajes.getValueAt(fila, 2).toString();
            String asunto = tablaMensajes.getValueAt(fila, 3).toString();
            String tipoMensaje = tablaMensajes.getValueAt(fila, 4).toString();
            String fechaEnvio = tablaMensajes.getValueAt(fila, 5).toString();
            String observacion = tablaMensajes.getValueAt(fila, 6).toString();

            // Crear una nueva instancia del formulario de edición de mensajes
            RegistroMensaje formularioEdicion = new RegistroMensaje(); // Crear instancia de formulario de edición

            // Crear un objeto Mensaje con los datos obtenidos
            Mensaje mensaje = new Mensaje(idMensaje, remitente, destinatario, asunto, tipoMensaje, fechaEnvio, observacion, observacion);

            // Llamar al método setFields de RegistroMensaje para asignar los datos
            formularioEdicion.setFields(mensaje);

            // Hacer visible el formulario de edición
            formularioEdicion.setVisible(true);
        } else {
            // Mostrar mensaje si no se seleccionó ninguna fila
            JOptionPane.showMessageDialog(null, "Selecciona un mensaje para modificar.");
        }
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        // TODO add your handling code here:
        ventanaAdmin vA = new ventanaAdmin();
        vA.setVisible(false); // Cerrar la ventana actual de Administración

// Abrir la ventana de Registro de Trámites
        registroMensaje tregistroTramite = new registroMensaje();
        tregistroTramite.setVisible(true); // Mostrar la ventana de registro de trámites

    }//GEN-LAST:event_jButton16ActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        // Variables
        int idMensajeSeleccionado = obtenerIdMensajeSeleccionado();  // Implementa este método para obtener el ID de la selección

        if (idMensajeSeleccionado == -1) {  // Si no hay mensaje seleccionado
            JOptionPane.showMessageDialog(null, "Por favor selecciona un mensaje para eliminar.");
            return;
        }

        // Confirmamos si el usuario está seguro de eliminar
        int confirmacion = JOptionPane.showConfirmDialog(null, "¿Estás seguro de eliminar este mensaje?", "Confirmar eliminación", JOptionPane.YES_NO_OPTION);

        if (confirmacion == JOptionPane.YES_OPTION) {
            // Si la respuesta es sí, procedemos a eliminar
            MensajeDAO mDAO = new MensajeDAO();
            boolean eliminado = mDAO.eliminarMensaje(idMensajeSeleccionado); // Llamamos al método para eliminar el mensaje

            if (eliminado) {
                JOptionPane.showMessageDialog(null, "Mensaje eliminado correctamente.");
                // Aquí puedes actualizar el listado de mensajes o realizar cualquier otra acción
                actualizarListaMensajes(); // Método para actualizar el listado de mensajes
            } else {
                JOptionPane.showMessageDialog(null, "Error al eliminar el mensaje.");
            }
        }
    }//GEN-LAST:event_jButton17ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        dispose();
        loginUsuarios loginU = new loginUsuarios();
        loginU.setVisible(true);
    }//GEN-LAST:event_jButton7ActionPerformed

// Método para obtener el ID del mensaje seleccionado en la tabla
    private int obtenerIdMensajeSeleccionado() {
        int row = tablaMensajes.getSelectedRow();  // tablaMensajes es el JTable donde se listan los mensajes
        if (row != -1) {
            // Obtiene el ID de la primera columna (asegúrate de que la columna ID esté en la primera posición)
            return (int) tablaMensajes.getValueAt(row, 0);  // Se asume que el ID está en la primera columna
        }
        return -1;  // Retorna -1 si no hay mensaje seleccionado
    }

// Método para obtener el ID del usuario seleccionado en la tabla
    private int obtenerIdUsuarioSeleccionado() {
        int row = tablaUsuarios.getSelectedRow();  // jTableUsuarios es el JTable donde se listan los usuarios
        if (row != -1) {
            // Obtiene el ID de la primera columna (asegúrate de que la columna ID esté en la primera posición)
            return (int) tablaUsuarios.getValueAt(row, 0);
        }
        return -1;  // Retorna -1 si no hay usuario seleccionado
    }

// Método para actualizar la lista de mensajes en la interfaz
    private void actualizarListaMensajes() {
        // Recargar los mensajes desde la base de datos y actualizar la tabla
        MensajeDAO mDAO = new MensajeDAO();
        List<Mensaje> mensajes = mDAO.listar();  // Obtener la lista actualizada de mensajes

        // Actualizar la tabla con los nuevos datos
        DefaultTableModel model = (DefaultTableModel) tablaMensajes.getModel();
        model.setRowCount(0);  // Limpiar la tabla antes de agregar los nuevos mensajes

        // Llenar la tabla con los nuevos mensajes
        for (Mensaje m : mensajes) {
            model.addRow(new Object[]{
                m.getIdMensaje(), // ID del mensaje
                m.getRemitente(), // Remitente del mensaje
                m.getDestinatario(), // Destinatario del mensaje
                m.getAsunto(), // Asunto del mensaje
                m.getCuerpo(), // Cuerpo del mensaje
                m.getFechaEnvio(), // Fecha de envío del mensaje
                m.getTipoMensaje(), // Tipo de mensaje
                m.getObservacion() // Observaciones sobre el mensaje
            });
        }
    }

    // Método para actualizar la lista de usuarios en la interfaz
    private void actualizarListaUsuarios() {
        //Recargar usuarios desde la base de datos y actualiza la tabla 
        UsuarioDAO uDAO = new UsuarioDAO();
        List<Usuario> usuarios = uDAO.listar();  // Obtener la lista actualizada de usuarios

        // Actualizar la tabla con los nuevos datos
        DefaultTableModel model = (DefaultTableModel) tablaUsuarios.getModel();
        model.setRowCount(0);  // Limpiar la tabla antes de agregar los nuevos usuarios

        // Llenar la tabla con los nuevos usuarios
        for (Usuario u : usuarios) {
            model.addRow(new Object[]{
                u.getId(),
                u.getUsuario(),
                u.getPassword(),
                u.getTipoUsuario(),
                u.getNombreCompleto(),
                u.getCiPasport(),
                u.getfNacimiento(),
                u.getGenero(),
                u.getDireccion(),
                u.getTelefono(),
                u.getEmail()
            });
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ventanaAdmin.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ventanaAdmin.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ventanaAdmin.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ventanaAdmin.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ventanaAdmin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btInicio;
    private javax.swing.JButton btnActualizarTaUsuario;
    private javax.swing.JButton btnBuscarUsuario;
    private javax.swing.JButton btnEliminarUsuario;
    private javax.swing.JButton btnModificarUsuario;
    private javax.swing.JButton btnRegistrarUsuario;
    private javax.swing.JButton btnTramites;
    private javax.swing.JButton btnUsuarios;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButtonBuscar2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField jTextBuscarUsuario;
    private javax.swing.JTextField jTextFieldBuscar2;
    private javax.swing.JPanel panelInicio;
    private javax.swing.JPanel panelTramites;
    private javax.swing.JPanel panelUsuarios;
    public javax.swing.JTable tablaMensajes;
    public javax.swing.JTable tablaUsuarios;
    // End of variables declaration//GEN-END:variables
}
